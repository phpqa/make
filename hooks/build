#!/bin/bash

set -e

printf "Environment variables:\\n"

printf "SOURCE_BRANCH=\"${SOURCE_BRANCH}\"\\n"
printf "SOURCE_COMMIT=\"${SOURCE_COMMIT}\"\\n"
printf "COMMIT_MSG=\"${COMMIT_MSG}\"\\n"
printf "DOCKER_REPO=\"${DOCKER_REPO}\"\\n"
printf "DOCKERFILE_PATH=\"${DOCKERFILE_PATH}\"\\n"
printf "CACHE_TAG=\"${CACHE_TAG}\"\\n"
printf "IMAGE_NAME=\"${IMAGE_NAME}\"\\n"

cat Dockerfile

printf "Build variables:\\n"

if test "${CACHE_TAG}" = "latest"; then
    BASE_IMAGE=$(sed -n "s/ARG BASE_IMAGE=\"\(.*\)\"/\1/p" Dockerfile)
    VERSION=$(sed -n "s/ARG VERSION=\"\(.*\)\"/\1/p" Dockerfile)
    TAG="${DOCKER_REPO}:${VERSION}-on-${BASE_IMAGE}"
else
    BASE_IMAGE=$(echo ${CACHE_TAG} | awk -F "-on-" '{print $2}' | sed -e '1 s/\-/:/; t')
    VERSION=$(echo ${CACHE_TAG} | awk -F "-on-" '{print $1}')
    TAG="${DOCKER_REPO}:${CACHE_TAG}"
fi

printf "BASE_IMAGE=\"${BASE_IMAGE}\"\\n"
printf "VERSION=\"${VERSION}\"\\n"
printf "DOCKERFILE_PATH=\"${DOCKERFILE_PATH}\"\\n"
printf "TAG=\"${TAG}\"\\n"

docker build \
    --build-arg BASE_IMAGE=${BASE_IMAGE} \
    --build-arg VERSION=${VERSION} \
    --file ${DOCKERFILE_PATH} \
    --tag ${TAG} \
    .
